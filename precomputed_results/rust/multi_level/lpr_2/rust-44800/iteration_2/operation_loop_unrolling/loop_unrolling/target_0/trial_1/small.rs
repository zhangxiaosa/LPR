use std::collections::VecDeque;\n\nfn main() {\n    let mut k = VecDeque::with_capacity(32);\n    let mut g_data = vec![0x45, 20, 0b1000_10_00, 0b1000_10_00];\n    let hw = 0b1000_10_00;\n    let addr: u8 = 1;\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(addr);\n    g_data.push(55);\n    g_data.push(55);\n    g_data.push(hw);\n    g_data.push(hw);\n    k.reserve_exact(g_data.len());\n    println!();\n    k.extend(&[0xD9]);\n}