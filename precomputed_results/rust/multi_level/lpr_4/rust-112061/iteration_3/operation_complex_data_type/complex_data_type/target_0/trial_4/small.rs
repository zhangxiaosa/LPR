use std::ptr;\n\nunsafe fn optimized_b() -> (bool, u8) {\n    let mut f = (false, 0);\n    let mut v20 = [0u8; 8];\n\n    let mut v20_ptr;\n    'l0: loop {\n        v20_ptr = ptr::addr_of_mut!(v20[2]);\n        v20 = [197_u8; 8];\n\n        loop {\n            match *v20_ptr {\n                197 => {\n                    f.1 = 22;\n                    let e = v20;\n                    f.0 = true;\n\n                    v20 = e;\n\n                    match 6 {\n                        6 => {\n                            println!("{:?}", f);\n                        }\n                        _ => continue 'l0,\n                    }\n                }\n                _ => break,\n            }\n        }\n    }\n\n    f\n}\n\nfn main() {\n    unsafe {\n        let f = optimized_b();\n        println!("{:?}", f);\n    }\n}