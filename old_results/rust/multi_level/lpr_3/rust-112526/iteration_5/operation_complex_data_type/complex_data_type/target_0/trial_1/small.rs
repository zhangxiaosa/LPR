extern crate core;\nuse core::ptr;\nunsafe fn a() -> *const *mut isize {\n    let mut isize_min: isize;\n    let mut _46: isize = 42;\n    let mut _47: isize;\n    let mut _88: usize = 18215089233857363959_usize;\n    let mut _31: *mut u8;\n    let mut _33: *mut isize;\n    let mut _90: *mut u8;\n    let mut _44_0: (u64, u64, u8) = Default::default();\n    let _44_1: (u64, u64, u8) = Default::default();\n    let _44_2: (u64, u64, u8) = Default::default();\n    let mut _tup_0: (((u64, u64, u8), u32, f32), bool) = Default::default();\n    let mut _95: (((u64, u64, u8), u32, f32), bool) = Default::default();\n    _31 = ptr::addr_of_mut!(_44_0.2);\n    *_31 = 1;\n    isize_min = isize::MIN;\n    'bb65_0: loop {\n        let tup_ptr = ptr::addr_of_mut!(_tup_0);\n        _31 = ptr::addr_of_mut!((*tup_ptr).0 .0 .2);\n        _90 = _31.wrapping_offset(isize::MIN);\n        _95.0 = (_44_0, _44_1, _44_2);\n        _31 = _90.wrapping_offset(isize_min);\n        loop {\n            let tup_ptr2 = ptr::addr_of_mut!(_tup_0);\n            *tup_ptr2 = _95;\n            isize_min = 0;\n            _47 = *_31;\n            match _88 {\n                18215089233857363959 => {\n                    _88 = 0;\n                    _33 = ptr::addr_of_mut!(_46);\n                    match _46 {\n                        42 => {\n                            println!("{_47}");\n                            return ptr::addr_of!(_33);\n                        }\n                        _ => continue,\n                    }\n                }\n                0 => continue,\n                _ => continue 'bb65_0,\n            }\n        }\n    }\n}\nfn main() {\n    unsafe {\n        a();\n    }\n}\n.
}