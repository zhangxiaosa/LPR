use std\u003A\u003Acollections\u003A\u003AVecDeque\u003B\n\nfn main\u0028\u0029 \u007B\n    let mut k = VecDeque::with_capacity\u002832\u0029\u003B\n    let mut g_data = Vec::<u8>::with_capacity\u002820\u0029\u003B\n    \n    let b = 0x45\u003B\n    \n    g_data.push\u0028b\u0029\u003B\n    g_data.push\u002820\u0029\u003B\n    \n    let hw = 0b1000_10_00\u003B\n    g_data.push\u0028hw\u0029\u003B\n    g_data.push\u0028hw\u0029\u003B\n\n    for b in g_data.iter\u0028\u0029 \u007B\n        k.push_front\u0028*b\u0029\u003B\n    \u007D\n    \n    g_data.push\u0028hw\u0029\u003B\n    g_data.push\u0028hw\u0029\u003B\n    \n    let addr = [1, 2, 3, 4, 5, 6]\u003B\n    \n    for &b in addr.iter\u0028\u0029 \u007B\n        g_data.push\u0028b\u0029\u003B\n    \u007D\n    \n    for &b in addr.iter\u0028\u0029 \u007B\n        g_data.push\u0028b\u0029\u003B\n    \u007D\n    \n    for &b in addr.iter\u0028\u0029 \u007B\n        g_data.push\u0028b\u0029\u003B\n    \u007D\n    \n    g_data.push\u002855\u0029\u003B\n    g_data.push\u002855\u0029\u003B\n    g_data.push\u0028hw\u0029\u003B\n    g_data.push\u0028hw\u0029\u003B\n    \n    k.reserve\u0028g_data.len\u0028\u0029\u0029\u003B\n    \n    let fcs = [0xD9]\u003B\n    \n    println\u00281\u0029\u003B\n    \n    k.extend\u0028&fcs\u0029\u003B\n\u007D