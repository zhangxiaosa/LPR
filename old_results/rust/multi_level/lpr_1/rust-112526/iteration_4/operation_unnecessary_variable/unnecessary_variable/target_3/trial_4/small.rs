extern crate core;\nuse core::ptr;\n\nunsafe fn a() -> *const *mut usize {\n    let mut _46;\n    let mut _31;\n    let mut _177 = ptr::null_mut();\n    let mut _44: ((u64, u64, u8), u32, f32) = Default::default();\n    let mut tup: (((u64, u64, u8), u32, f32), bool) = Default::default();\n    _31 = ptr::addr_of_mut!(_44.0 .2);\n    *_31 = 1;\n  \n    'bb65: loop {\n        _31 = ptr::addr_of_mut!(tup.0 .0 .2);\n        _31 = _31.wrapping_offset(isize::MIN);\n        _46 = 42;\n        _31 = _31.wrapping_offset(0);\n        loop {\n            *ptr::addr_of_mut!(tup) = (_44, Default::default());\n            _177 = ptr::addr_of_mut!(_46);\n            println!("{:?}", *_31);\n            return ptr::addr_of!(_177);\n        }\n    }\n}\n\nfn main() {\n    unsafe {\n        a();\n    }\n}