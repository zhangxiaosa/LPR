use std::ptr;\n\nunsafe fn b() -> ([u32; 28], *mut i8, *mut bool) {\n    let mut c = false;\n    let mut v8 = 13978819448286864680_u64;\n    let mut v9 = 0;\n    let mut v20_decomposed = [197_u8; 8];\n    let mut f_0 = false;\n    let mut v33_2_ptr;\n    let mut v39: (usize, [u32; 28], ([u32; 6], usize, *mut u32), [u32; 2]) =\n        (0, [0; 28], ([0; 6], 0, ptr::null_mut()), [0; 2]);\n    let ret_0 = [0; 28];\n    let ret_1 = ptr::null_mut();\n    let ret_2;\n    ret_2 = ptr::addr_of_mut!(c);\n    let mut v20_decomposed_ptr;\n    'l0: loop {\n        v20_decomposed_ptr = ptr::addr_of_mut!(v20_decomposed[v9]);\n        v9 = 2_usize;\n        loop {\n            match *v20_decomposed_ptr {\n                197 => {\n                    v33_2_ptr = ret_2;\n                    'l2: loop {\n                        *v20_decomposed_ptr = 22;\n                        loop {\n                            let e = v20_decomposed;\n                            match v8 {\n                                13978819448286864680 => {\n                                    v39.2 .0 = [2262110980_u32; 6];\n                                    v8 = 13152832795211590855_u64;\n                                    v39.0 = 6;\n                                    let d = v33_2_ptr;\n                                    v33_2_ptr = ptr::addr_of_mut!(f_0);\n                                    *d = true;\n                                    v20_decomposed = e;\n                                    match v39.0 {\n                                        6 => {\n                                            println!(\"{:?}\", *v20_decomposed_ptr);\n                                        }\n                                        0 => continue 'l2,\n                                        _ => return (ret_0, ret_1, ret_2),\n                                    }\n                                }\n                                _ => continue 'l0,\n                            }\n                        }\n                    }\n                }\n                4 => {\n                    v20_decomposed_ptr = ptr::addr_of_mut!(v20_decomposed[v9]);\n                }\n                _ => return (ret_0, ret_1, ret_2),\n            }\n        }\n    }\n}\n\nfn main() {\n    unsafe {\n        b();\n    }\n}