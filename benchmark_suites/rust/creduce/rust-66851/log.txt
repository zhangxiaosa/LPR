===< 1532060 >===
running 1 interestingness test in parallel
===< pass_includes :: 0 >===
===< pass_unifdef :: 0 >===
===< pass_comments :: 0 >===
===< pass_blank :: 0 >===
(0.5 %, 4174 bytes)
timestamp 3 size 4174
(2.5 %, 4094 bytes)
timestamp 4 size 4094
===< pass_clang_binsrch :: replace-function-def-with-decl >===
===< pass_clang_binsrch :: remove-unused-function >===
===< pass_lines :: 0 >===
(2.4 %, 4098 bytes)
timestamp 5 size 4098
(4.1 %, 4026 bytes)
timestamp 7 size 4026
(4.7 %, 3999 bytes)
timestamp 9 size 3999
===< pass_lines :: 1 >===
(4.1 %, 4025 bytes)
timestamp 10 size 4025
(4.7 %, 3999 bytes)
timestamp 15 size 3999
===< pass_lines :: 2 >===
(3.9 %, 4035 bytes)
timestamp 17 size 4035
(5.6 %, 3960 bytes)
timestamp 25 size 3960
===< pass_lines :: 3 >===
(4.3 %, 4015 bytes)
timestamp 32 size 4015
===< pass_lines :: 4 >===
(2.4 %, 4096 bytes)
timestamp 170 size 4096
===< pass_lines :: 6 >===
(-0.2 %, 4206 bytes)
timestamp 315 size 4206
(5.6 %, 3963 bytes)
timestamp 387 size 3963
(6.9 %, 3906 bytes)
timestamp 388 size 3906
(7.6 %, 3876 bytes)
timestamp 396 size 3876
===< pass_lines :: 8 >===
(5.1 %, 3983 bytes)
timestamp 401 size 3983
===< pass_lines :: 10 >===
(2.5 %, 4090 bytes)
timestamp 486 size 4090
===< pass_clang_binsrch :: replace-function-def-with-decl >===
===< pass_clang_binsrch :: remove-unused-function >===
===< pass_clang :: remove-unused-function >===
===< pass_balanced :: curly >===
===< pass_balanced :: curly2 >===
===< pass_balanced :: curly3 >===
===< pass_balanced :: parens-to-zero >===
(2.8 %, 4081 bytes)
timestamp 581 size 4081
===< pass_clang :: callexpr-to-value >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: simplify-callexpr >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang_binsrch :: remove-unused-var >===
===< pass_special :: a >===
===< pass_special :: b >===
===< pass_special :: c >===
===< pass_include_includes :: 0 >===
===< pass_ternary :: b >===
===< pass_ternary :: c >===
===< pass_balanced :: curly >===
===< pass_balanced :: curly2 >===
===< pass_balanced :: curly3 >===
===< pass_balanced :: parens >===
===< pass_balanced :: angles >===
===< pass_balanced :: square >===
===< pass_balanced :: curly-inside >===
(3.3 %, 4057 bytes)
timestamp 668 size 4057
===< pass_balanced :: parens-inside >===
===< pass_balanced :: angles-inside >===
===< pass_balanced :: square-inside >===
===< pass_balanced :: curly-only >===
===< pass_balanced :: angles-only >===
===< pass_balanced :: square-only >===
===< pass_clang :: remove-namespace >===
===< pass_clang :: aggregate-to-scalar >===
===< pass_clang :: param-to-global >===
===< pass_clang :: param-to-local >===
===< pass_clang :: remove-nested-function >===
===< pass_clang :: union-to-struct >===
===< pass_clang :: return-void >===
===< pass_clang :: simple-inliner >===
===< pass_clang :: reduce-pointer-level >===
===< pass_clang :: lift-assignment-expr >===
===< pass_clang :: copy-propagation >===
===< pass_clang :: callexpr-to-value >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: simplify-callexpr >===
===< pass_clang :: remove-unused-function >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang_binsrch :: remove-unused-var >===
===< pass_clang :: simplify-if >===
===< pass_clang :: reduce-array-dim >===
===< pass_clang :: reduce-array-size >===
===< pass_clang :: move-function-body >===
===< pass_clang :: simplify-comma-expr >===
===< pass_clang :: simplify-dependent-typedef >===
===< pass_clang :: replace-simple-typedef >===
===< pass_clang :: replace-dependent-typedef >===
===< pass_clang :: replace-one-level-typedef-type >===
===< pass_clang :: remove-unused-field >===
===< pass_clang :: instantiate-template-type-param-to-int >===
===< pass_clang :: instantiate-template-param >===
===< pass_clang :: template-arg-to-int >===
===< pass_clang :: template-non-type-arg-to-int >===
===< pass_clang :: reduce-class-template-param >===
===< pass_clang :: remove-trivial-base-template >===
===< pass_clang :: class-template-to-class >===
===< pass_clang :: remove-base-class >===
===< pass_clang :: replace-derived-class >===
===< pass_clang :: remove-unresolved-base >===
===< pass_clang :: remove-ctor-initializer >===
===< pass_clang :: replace-class-with-base-template-spec >===
===< pass_clang :: simplify-nested-class >===
===< pass_clang :: remove-unused-outer-class >===
===< pass_clang :: empty-struct-to-int >===
===< pass_clang :: remove-pointer >===
===< pass_clang :: reduce-pointer-pairs >===
===< pass_clang :: remove-array >===
===< pass_clang :: remove-addr-taken >===
===< pass_clang :: simplify-struct >===
===< pass_clang :: replace-undefined-function >===
===< pass_clang :: replace-array-index-var >===
===< pass_clang :: replace-array-access-with-index >===
===< pass_clang :: replace-dependent-name >===
===< pass_clang :: simplify-recursive-template-instantiation >===
===< pass_clang :: vector-to-array >===
===< pass_lines :: 0 >===
(3.3 %, 4059 bytes)
timestamp 686 size 4059
===< pass_lines :: 1 >===
(2.7 %, 4084 bytes)
timestamp 688 size 4084
===< pass_lines :: 2 >===
(1.9 %, 4118 bytes)
timestamp 693 size 4118
===< pass_lines :: 3 >===
(0.6 %, 4172 bytes)
timestamp 707 size 4172
(4.2 %, 4022 bytes)
timestamp 714 size 4022
===< pass_lines :: 4 >===
(2.4 %, 4097 bytes)
timestamp 789 size 4097
===< pass_lines :: 6 >===
(-0.0 %, 4199 bytes)
timestamp 940 size 4199
===< pass_lines :: 8 >===
(-2.5 %, 4301 bytes)
timestamp 1024 size 4301
===< pass_lines :: 10 >===
(-4.9 %, 4403 bytes)
timestamp 1106 size 4403
===< pass_unifdef :: 0 >===
===< pass_comments :: 0 >===
===< pass_special :: b >===
===< pass_special :: c >===
===< pass_indent :: regular >===
===< pass_balanced :: parens-to-zero >===
===< pass_clex :: rm-toks-1 >===
(-4.8 %, 4399 bytes)
timestamp 1199 size 4399
(-4.7 %, 4395 bytes)
timestamp 1200 size 4395
(-4.2 %, 4373 bytes)
timestamp 1208 size 4373
(-3.7 %, 4353 bytes)
timestamp 1214 size 4353
(-3.6 %, 4349 bytes)
timestamp 1216 size 4349
(-3.1 %, 4329 bytes)
timestamp 1223 size 4329
(-2.6 %, 4305 bytes)
timestamp 1232 size 4305
(-2.0 %, 4283 bytes)
timestamp 1236 size 4283
(-1.5 %, 4259 bytes)
timestamp 1250 size 4259
(-1.4 %, 4255 bytes)
timestamp 1252 size 4255
(-1.1 %, 4242 bytes)
timestamp 1254 size 4242
(-1.0 %, 4240 bytes)
timestamp 1255 size 4240
(-0.5 %, 4218 bytes)
timestamp 1264 size 4218
(-0.0 %, 4198 bytes)
timestamp 1266 size 4198
(0.0 %, 4195 bytes)
timestamp 1269 size 4195
(0.1 %, 4191 bytes)
timestamp 1276 size 4191
(0.3 %, 4185 bytes)
timestamp 1281 size 4185
(0.7 %, 4169 bytes)
timestamp 1285 size 4169
===< pass_clex :: rm-toks-2 >===
(0.8 %, 4163 bytes)
timestamp 1309 size 4163
(0.9 %, 4160 bytes)
timestamp 1321 size 4160
(1.0 %, 4154 bytes)
timestamp 1325 size 4154
(1.3 %, 4141 bytes)
timestamp 1436 size 4141
(1.6 %, 4130 bytes)
timestamp 1439 size 4130
(1.8 %, 4122 bytes)
timestamp 1441 size 4122
===< pass_clex :: rm-toks-3 >===
===< pass_clex :: rm-toks-4 >===
(2.4 %, 4095 bytes)
timestamp 1584 size 4095
(2.7 %, 4085 bytes)
timestamp 1597 size 4085
(3.0 %, 4069 bytes)
timestamp 1681 size 4069
===< pass_clex :: rm-toks-5 >===
(3.5 %, 4050 bytes)
timestamp 1743 size 4050
===< pass_clex :: rm-toks-6 >===
===< pass_clex :: rm-toks-7 >===
===< pass_clex :: rm-toks-8 >===
===< pass_clex :: rm-toks-9 >===
===< pass_clex :: rm-toks-10 >===
===< pass_clex :: rm-toks-11 >===
===< pass_clex :: rm-toks-12 >===
===< pass_clex :: rm-toks-13 >===
===< pass_clex :: rm-toks-14 >===
===< pass_clex :: rm-toks-15 >===
(5.7 %, 3956 bytes)
timestamp 2413 size 3956
(6.4 %, 3927 bytes)
timestamp 2438 size 3927
===< pass_clex :: rm-toks-16 >===
(7.6 %, 3876 bytes)
timestamp 2486 size 3876
===< pass_clex :: rm-tok-pattern-4 >===
(7.7 %, 3874 bytes)
timestamp 2522 size 3874
(8.0 %, 3863 bytes)
timestamp 2557 size 3863
(8.0 %, 3860 bytes)
timestamp 3080 size 3860
(8.2 %, 3852 bytes)
timestamp 3082 size 3852
(8.2 %, 3851 bytes)
timestamp 3089 size 3851
(8.3 %, 3849 bytes)
timestamp 3118 size 3849
===< pass_clang :: local-to-global >===
===< pass_peep :: a >===
===< pass_peep :: c >===
===< pass_ints :: a >===
===< pass_ints :: b >===
===< pass_ints :: c >===
===< pass_ints :: d >===
===< pass_ints :: e >===
===< pass_balanced :: parens-only >===
(8.3 %, 3847 bytes)
timestamp 3288 size 3847
===< pass_clex :: rename-toks >===
(8.6 %, 3835 bytes)
timestamp 3291 size 3835
(8.6 %, 3835 bytes)
timestamp 3292 size 3835
(8.6 %, 3835 bytes)
timestamp 3293 size 3835
(8.8 %, 3829 bytes)
timestamp 3295 size 3829
(9.1 %, 3814 bytes)
timestamp 3297 size 3814
(9.8 %, 3786 bytes)
timestamp 3298 size 3786
(10.1 %, 3772 bytes)
timestamp 3300 size 3772
(10.6 %, 3754 bytes)
timestamp 3301 size 3754
(12.7 %, 3664 bytes)
timestamp 3302 size 3664
(12.9 %, 3656 bytes)
timestamp 3303 size 3656
(13.0 %, 3650 bytes)
timestamp 3305 size 3650
(13.2 %, 3644 bytes)
timestamp 3306 size 3644
(13.7 %, 3623 bytes)
timestamp 3307 size 3623
(14.8 %, 3575 bytes)
timestamp 3309 size 3575
(15.3 %, 3553 bytes)
timestamp 3310 size 3553
(15.5 %, 3547 bytes)
timestamp 3311 size 3547
(16.0 %, 3527 bytes)
timestamp 3313 size 3527
(16.0 %, 3527 bytes)
timestamp 3314 size 3527
(16.0 %, 3525 bytes)
timestamp 3316 size 3525
===< pass_clex :: delete-string >===
===< pass_clex :: define >===
Termination check: size was 4197; now 3525
===< pass_include_includes :: 0 >===
===< pass_ternary :: b >===
===< pass_ternary :: c >===
===< pass_balanced :: curly >===
===< pass_balanced :: curly2 >===
===< pass_balanced :: curly3 >===
===< pass_balanced :: parens >===
===< pass_balanced :: angles >===
===< pass_balanced :: square >===
===< pass_balanced :: curly-inside >===
(16.1 %, 3522 bytes)
timestamp 3407 size 3522
===< pass_balanced :: parens-inside >===
===< pass_balanced :: angles-inside >===
===< pass_balanced :: square-inside >===
===< pass_balanced :: curly-only >===
===< pass_balanced :: angles-only >===
===< pass_balanced :: square-only >===
===< pass_clang :: remove-namespace >===
===< pass_clang :: aggregate-to-scalar >===
===< pass_clang :: param-to-global >===
===< pass_clang :: param-to-local >===
===< pass_clang :: remove-nested-function >===
===< pass_clang :: union-to-struct >===
===< pass_clang :: return-void >===
===< pass_clang :: simple-inliner >===
===< pass_clang :: reduce-pointer-level >===
===< pass_clang :: lift-assignment-expr >===
===< pass_clang :: copy-propagation >===
===< pass_clang :: callexpr-to-value >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: simplify-callexpr >===
===< pass_clang :: remove-unused-function >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang_binsrch :: remove-unused-var >===
===< pass_clang :: simplify-if >===
===< pass_clang :: reduce-array-dim >===
===< pass_clang :: reduce-array-size >===
===< pass_clang :: move-function-body >===
===< pass_clang :: simplify-comma-expr >===
===< pass_clang :: simplify-dependent-typedef >===
===< pass_clang :: replace-simple-typedef >===
===< pass_clang :: replace-dependent-typedef >===
===< pass_clang :: replace-one-level-typedef-type >===
===< pass_clang :: remove-unused-field >===
===< pass_clang :: instantiate-template-type-param-to-int >===
===< pass_clang :: instantiate-template-param >===
===< pass_clang :: template-arg-to-int >===
===< pass_clang :: template-non-type-arg-to-int >===
===< pass_clang :: reduce-class-template-param >===
===< pass_clang :: remove-trivial-base-template >===
===< pass_clang :: class-template-to-class >===
===< pass_clang :: remove-base-class >===
===< pass_clang :: replace-derived-class >===
===< pass_clang :: remove-unresolved-base >===
===< pass_clang :: remove-ctor-initializer >===
===< pass_clang :: replace-class-with-base-template-spec >===
===< pass_clang :: simplify-nested-class >===
===< pass_clang :: remove-unused-outer-class >===
===< pass_clang :: empty-struct-to-int >===
===< pass_clang :: remove-pointer >===
===< pass_clang :: reduce-pointer-pairs >===
===< pass_clang :: remove-array >===
===< pass_clang :: remove-addr-taken >===
===< pass_clang :: simplify-struct >===
===< pass_clang :: replace-undefined-function >===
===< pass_clang :: replace-array-index-var >===
===< pass_clang :: replace-array-access-with-index >===
===< pass_clang :: replace-dependent-name >===
===< pass_clang :: simplify-recursive-template-instantiation >===
===< pass_clang :: vector-to-array >===
===< pass_lines :: 0 >===
(16.0 %, 3524 bytes)
timestamp 3426 size 3524
===< pass_lines :: 1 >===
(15.5 %, 3545 bytes)
timestamp 3428 size 3545
===< pass_lines :: 2 >===
(14.8 %, 3575 bytes)
timestamp 3433 size 3575
===< pass_lines :: 3 >===
(13.7 %, 3620 bytes)
timestamp 3444 size 3620
===< pass_lines :: 4 >===
(12.2 %, 3685 bytes)
timestamp 3457 size 3685
(13.2 %, 3645 bytes)
timestamp 3539 size 3645
===< pass_lines :: 6 >===
(11.1 %, 3731 bytes)
timestamp 3549 size 3731
===< pass_lines :: 8 >===
(9.1 %, 3817 bytes)
timestamp 3569 size 3817
===< pass_lines :: 10 >===
(7.0 %, 3903 bytes)
timestamp 3589 size 3903
===< pass_unifdef :: 0 >===
===< pass_comments :: 0 >===
===< pass_special :: b >===
===< pass_special :: c >===
===< pass_indent :: regular >===
===< pass_balanced :: parens-to-zero >===
===< pass_clex :: rm-toks-1 >===
===< pass_clex :: rm-toks-2 >===
===< pass_clex :: rm-toks-3 >===
===< pass_clex :: rm-toks-4 >===
===< pass_clex :: rm-toks-5 >===
===< pass_clex :: rm-toks-6 >===
===< pass_clex :: rm-toks-7 >===
===< pass_clex :: rm-toks-8 >===
===< pass_clex :: rm-toks-9 >===
===< pass_clex :: rm-toks-10 >===
===< pass_clex :: rm-toks-11 >===
===< pass_clex :: rm-toks-12 >===
===< pass_clex :: rm-toks-13 >===
===< pass_clex :: rm-toks-14 >===
===< pass_clex :: rm-toks-15 >===
===< pass_clex :: rm-toks-16 >===
===< pass_clex :: rm-tok-pattern-4 >===
===< pass_clang :: local-to-global >===
===< pass_peep :: a >===
===< pass_peep :: c >===
===< pass_ints :: a >===
===< pass_ints :: b >===
===< pass_ints :: c >===
===< pass_ints :: d >===
===< pass_ints :: e >===
===< pass_balanced :: parens-only >===
===< pass_clex :: rename-toks >===
(7.4 %, 3885 bytes)
timestamp 5502 size 3885
(7.9 %, 3867 bytes)
timestamp 5504 size 3867
(8.1 %, 3857 bytes)
timestamp 5505 size 3857
(9.1 %, 3817 bytes)
timestamp 5507 size 3817
(9.1 %, 3814 bytes)
timestamp 5508 size 3814
(9.1 %, 3814 bytes)
timestamp 5510 size 3814
(10.3 %, 3765 bytes)
timestamp 5511 size 3765
(11.2 %, 3725 bytes)
timestamp 5512 size 3725
(11.5 %, 3713 bytes)
timestamp 5514 size 3713
(11.7 %, 3707 bytes)
timestamp 5516 size 3707
(11.7 %, 3707 bytes)
timestamp 5518 size 3707
(12.0 %, 3695 bytes)
timestamp 5519 size 3695
===< pass_clex :: delete-string >===
===< pass_clex :: define >===
Termination check: size was 3525; now 3695
===< pass_clang :: rename-fun >===
===< pass_clang :: rename-param >===
===< pass_clang :: rename-var >===
===< pass_clang :: rename-class >===
===< pass_clang :: rename-cxx-method >===
===< pass_clang :: combine-global-var >===
===< pass_clang :: combine-local-var >===
===< pass_clang :: simplify-struct-union-decl >===
===< pass_clang :: move-global-var >===
===< pass_clang :: unify-function-decl >===
===< pass_lines :: 0 >===
(11.9 %, 3697 bytes)
timestamp 5522 size 3697
===< pass_clex :: rename-toks >===
===< pass_clex :: delete-string >===
===< pass_indent :: final >===
===================== done ====================

pass statistics:
  method pass_clex :: rm-toks-16 worked 1 times and failed 1352 times
  method pass_balanced :: parens-to-zero worked 1 times and failed 91 times
  method pass_clex :: rm-toks-5 worked 1 times and failed 1398 times
  method pass_balanced :: parens-only worked 1 times and failed 56 times
  method pass_blank :: 0 worked 2 times and failed 0 times
  method pass_clex :: rm-toks-15 worked 2 times and failed 1368 times
  method pass_balanced :: curly-inside worked 2 times and failed 62 times
  method pass_lines :: 10 worked 3 times and failed 529 times
  method pass_clex :: rm-toks-4 worked 3 times and failed 1403 times
  method pass_lines :: 8 worked 3 times and failed 529 times
  method pass_lines :: 3 worked 4 times and failed 278 times
  method pass_lines :: 2 worked 4 times and failed 203 times
  method pass_lines :: 4 worked 4 times and failed 453 times
  method pass_lines :: 1 worked 4 times and failed 139 times
  method pass_clex :: rm-toks-2 worked 6 times and failed 1415 times
  method pass_clex :: rm-tok-pattern-4 worked 6 times and failed 10736 times
  method pass_lines :: 6 worked 6 times and failed 533 times
  method pass_lines :: 0 worked 6 times and failed 29 times
  method pass_clex :: rm-toks-1 worked 18 times and failed 1427 times
  method pass_clex :: rename-toks worked 31 times and failed 80 times

          ******** /tmp/gpt_reduction/results/f0f2aca/scripts_run_creduce_py_benchmark_suite_tmp_gpt_reduction_benchmark_suites_rust_original_max_jobs_8/rust-66851/creduce/small.rs ********

 macro_rules! a {                      ($b:expr, $c:ident) => ($b as $c) }
                         fn d() -> Option<u64> {                          const e: i32 = 7;                          const f: i32 = 1 << 12;                          const w: usize = f as _;                          type g = [i32];                          type h = [bool               ];                          type x = [[i32;                      2];                      16];                          enum j {                   k(u64), l(i32), m }                          fn n(aa: i32,                 o: &x,                 p: i32,                 q: i32,                 ab: i32,                 ac: &mut h,                 ad: &mut g) -> j {                           if ab == aa {                            let mut ae = String::new();                            for i in (0 .. ab).rev() {                             ae += &ad[1 << i].to_string()}                            return if let Ok(r) = ae.parse() {                             j::k(r)             }                else {                             j::m             }     }                           let mut t= 0;                           let y = q;                           for i in 0 .. ab {                            t = t.max(o[a!{            i, usize}                + 1][1] -                                 o[a!{            i, usize}                + 1][0])}                           let mut u = t ;                           while u < y {                            let mut af = true;                            let ag = 1 << ab;                            let mut ah= 0;                            for i in 0 .. ag {                             let s = ad[i] + u;                             if ac[a!{         s, usize}            ] {                              af = false;                              break}                             ad[ag + i] = s;                             ac[a!{         s, usize}            ] = true;                             ah += 1}                            if af {                             let mut z: x = Default::default();                             for i in 1 .. ab + 2 {                              z[a!{         i, usize}         ][0] = u + o[a!{         i, usize}          - 1][0];                              z[a!{         i, usize}         ][1] = o[a!{         i, usize}         ][1]                                                     .max(u + o[a!{         i, usize}          - 1][1])}                             let af = n(aa,                                    &z,                                    u,                                    u,                                    ab + 1,                                    ac,                                    ad);                             match af {                              j::k(_) | j::m => return af,                     j::l(v) => {   }                          }                         }                            for i in 0 .. ah {                             ac[a!{         ad[ag + a!{         i, usize}         ], usize}            ] = false}                            u += 1}                           j::l(p)     }                          let mut ac= [false;                      w];                          let mut ad= [0;                      1 << e ];                          let  o  = Default::default()                   ;                          match n(e, &o, f,                    f, 0, &mut ac, &mut ad) {                           j::k(s) => Some(s),         _ => None}                      }
                         fn main() {                          assert_eq!(d(), Some(20_313_839_404_245))}
[2023-11-16 02:31:01] Finished reduction on benchmark rust-66851
