===< 1532055 >===
running 1 interestingness test in parallel
===< pass_includes :: 0 >===
===< pass_unifdef :: 0 >===
===< pass_comments :: 0 >===
===< pass_blank :: 0 >===
(0.1 %, 4003 bytes)
timestamp 1 size 4003
===< pass_clang_binsrch :: replace-function-def-with-decl >===
===< pass_clang_binsrch :: remove-unused-function >===
===< pass_lines :: 0 >===
(-0.2 %, 4018 bytes)
timestamp 2 size 4018
(0.3 %, 3996 bytes)
timestamp 227 size 3996
===< pass_lines :: 1 >===
(-0.5 %, 4031 bytes)
timestamp 228 size 4031
===< pass_lines :: 2 >===
(-1.5 %, 4071 bytes)
timestamp 517 size 4071
===< pass_lines :: 3 >===
(-2.6 %, 4115 bytes)
timestamp 776 size 4115
===< pass_lines :: 4 >===
(-3.8 %, 4160 bytes)
timestamp 1068 size 4160
===< pass_lines :: 6 >===
(-4.9 %, 4205 bytes)
timestamp 1418 size 4205
===< pass_lines :: 8 >===
(-6.0 %, 4250 bytes)
timestamp 1769 size 4250
===< pass_lines :: 10 >===
(-7.1 %, 4295 bytes)
timestamp 2120 size 4295
===< pass_clang_binsrch :: replace-function-def-with-decl >===
===< pass_clang_binsrch :: remove-unused-function >===
===< pass_clang :: remove-unused-function >===
===< pass_balanced :: curly >===
===< pass_balanced :: curly2 >===
===< pass_balanced :: curly3 >===
===< pass_balanced :: parens-to-zero >===
===< pass_clang :: callexpr-to-value >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: simplify-callexpr >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang_binsrch :: remove-unused-var >===
===< pass_special :: a >===
===< pass_special :: b >===
===< pass_special :: c >===
===< pass_include_includes :: 0 >===
===< pass_ternary :: b >===
===< pass_ternary :: c >===
===< pass_balanced :: curly >===
===< pass_balanced :: curly2 >===
===< pass_balanced :: curly3 >===
===< pass_balanced :: parens >===
===< pass_balanced :: angles >===
===< pass_balanced :: square >===
===< pass_balanced :: curly-inside >===
===< pass_balanced :: parens-inside >===
===< pass_balanced :: angles-inside >===
===< pass_balanced :: square-inside >===
===< pass_balanced :: curly-only >===
===< pass_balanced :: angles-only >===
===< pass_balanced :: square-only >===
===< pass_clang :: remove-namespace >===
===< pass_clang :: aggregate-to-scalar >===
===< pass_clang :: param-to-global >===
===< pass_clang :: param-to-local >===
===< pass_clang :: remove-nested-function >===
===< pass_clang :: union-to-struct >===
===< pass_clang :: return-void >===
===< pass_clang :: simple-inliner >===
===< pass_clang :: reduce-pointer-level >===
===< pass_clang :: lift-assignment-expr >===
===< pass_clang :: copy-propagation >===
===< pass_clang :: callexpr-to-value >===
===< pass_clang :: replace-callexpr >===
===< pass_clang :: simplify-callexpr >===
===< pass_clang :: remove-unused-function >===
===< pass_clang :: remove-unused-enum-member >===
===< pass_clang :: remove-enum-member-value >===
===< pass_clang_binsrch :: remove-unused-var >===
===< pass_clang :: simplify-if >===
===< pass_clang :: reduce-array-dim >===
===< pass_clang :: reduce-array-size >===
===< pass_clang :: move-function-body >===
===< pass_clang :: simplify-comma-expr >===
===< pass_clang :: simplify-dependent-typedef >===
===< pass_clang :: replace-simple-typedef >===
===< pass_clang :: replace-dependent-typedef >===
===< pass_clang :: replace-one-level-typedef-type >===
===< pass_clang :: remove-unused-field >===
===< pass_clang :: instantiate-template-type-param-to-int >===
===< pass_clang :: instantiate-template-param >===
===< pass_clang :: template-arg-to-int >===
===< pass_clang :: template-non-type-arg-to-int >===
===< pass_clang :: reduce-class-template-param >===
===< pass_clang :: remove-trivial-base-template >===
===< pass_clang :: class-template-to-class >===
===< pass_clang :: remove-base-class >===
===< pass_clang :: replace-derived-class >===
===< pass_clang :: remove-unresolved-base >===
===< pass_clang :: remove-ctor-initializer >===
===< pass_clang :: replace-class-with-base-template-spec >===
===< pass_clang :: simplify-nested-class >===
===< pass_clang :: remove-unused-outer-class >===
===< pass_clang :: empty-struct-to-int >===
===< pass_clang :: remove-pointer >===
===< pass_clang :: reduce-pointer-pairs >===
===< pass_clang :: remove-array >===
===< pass_clang :: remove-addr-taken >===
===< pass_clang :: simplify-struct >===
===< pass_clang :: replace-undefined-function >===
===< pass_clang :: replace-array-index-var >===
===< pass_clang :: replace-array-access-with-index >===
===< pass_clang :: replace-dependent-name >===
===< pass_clang :: simplify-recursive-template-instantiation >===
===< pass_clang :: vector-to-array >===
===< pass_lines :: 0 >===
(-7.5 %, 4310 bytes)
timestamp 2762 size 4310
===< pass_lines :: 1 >===
(-8.4 %, 4345 bytes)
timestamp 2987 size 4345
===< pass_lines :: 2 >===
(-9.4 %, 4385 bytes)
timestamp 3277 size 4385
===< pass_lines :: 3 >===
(-10.5 %, 4429 bytes)
timestamp 3538 size 4429
===< pass_lines :: 4 >===
(-11.6 %, 4474 bytes)
timestamp 3830 size 4474
===< pass_lines :: 6 >===
(-12.7 %, 4519 bytes)
timestamp 4181 size 4519
===< pass_lines :: 8 >===
(-13.8 %, 4564 bytes)
timestamp 4533 size 4564
===< pass_lines :: 10 >===
(-15.0 %, 4609 bytes)
timestamp 4886 size 4609
===< pass_unifdef :: 0 >===
===< pass_comments :: 0 >===
===< pass_special :: b >===
===< pass_special :: c >===
===< pass_indent :: regular >===
===< pass_balanced :: parens-to-zero >===
===< pass_clex :: rm-toks-1 >===
(-14.9 %, 4605 bytes)
timestamp 5240 size 4605
(-14.5 %, 4589 bytes)
timestamp 5242 size 4589
(-14.4 %, 4585 bytes)
timestamp 5242 size 4585
(-14.3 %, 4581 bytes)
timestamp 5245 size 4581
(-14.2 %, 4577 bytes)
timestamp 5250 size 4577
(-14.1 %, 4574 bytes)
timestamp 5251 size 4574
(-12.7 %, 4520 bytes)
timestamp 5256 size 4520
(-11.5 %, 4470 bytes)
timestamp 5257 size 4470
(-10.4 %, 4424 bytes)
timestamp 5258 size 4424
(-9.4 %, 4386 bytes)
timestamp 5259 size 4386
(-8.6 %, 4352 bytes)
timestamp 5259 size 4352
(-8.1 %, 4334 bytes)
timestamp 5260 size 4334
(-8.0 %, 4330 bytes)
timestamp 5261 size 4330
===< pass_clex :: rm-toks-2 >===
(-7.8 %, 4322 bytes)
timestamp 5263 size 4322
(-7.7 %, 4319 bytes)
timestamp 5264 size 4319
(-7.6 %, 4312 bytes)
timestamp 5265 size 4312
(-7.5 %, 4309 bytes)
timestamp 5265 size 4309
(-7.3 %, 4301 bytes)
timestamp 5266 size 4301
(-7.2 %, 4298 bytes)
timestamp 5266 size 4298
(-7.1 %, 4292 bytes)
timestamp 5267 size 4292
(-7.0 %, 4289 bytes)
timestamp 5267 size 4289
(-6.8 %, 4283 bytes)
timestamp 5268 size 4283
(-6.7 %, 4277 bytes)
timestamp 5269 size 4277
(-6.6 %, 4274 bytes)
timestamp 5269 size 4274
(-6.4 %, 4266 bytes)
timestamp 5270 size 4266
(-6.3 %, 4263 bytes)
timestamp 5270 size 4263
(-6.2 %, 4258 bytes)
timestamp 5276 size 4258
===< pass_clex :: rm-toks-3 >===
===< pass_clex :: rm-toks-4 >===
(-6.0 %, 4248 bytes)
timestamp 5301 size 4248
(-5.6 %, 4234 bytes)
timestamp 5303 size 4234
(-5.4 %, 4224 bytes)
timestamp 5304 size 4224
(-5.1 %, 4213 bytes)
timestamp 5305 size 4213
===< pass_clex :: rm-toks-5 >===
===< pass_clex :: rm-toks-6 >===
(-4.7 %, 4197 bytes)
timestamp 5330 size 4197
===< pass_clex :: rm-toks-7 >===
(-4.3 %, 4180 bytes)
timestamp 5343 size 4180
(-3.8 %, 4163 bytes)
timestamp 5343 size 4163
(-3.5 %, 4150 bytes)
timestamp 5344 size 4150
(-3.1 %, 4133 bytes)
timestamp 5345 size 4133
===< pass_clex :: rm-toks-8 >===
===< pass_clex :: rm-toks-9 >===
===< pass_clex :: rm-toks-10 >===
===< pass_clex :: rm-toks-11 >===
===< pass_clex :: rm-toks-12 >===
===< pass_clex :: rm-toks-13 >===
===< pass_clex :: rm-toks-14 >===
===< pass_clex :: rm-toks-15 >===
===< pass_clex :: rm-toks-16 >===
===< pass_clex :: rm-tok-pattern-4 >===
(-3.0 %, 4131 bytes)
timestamp 5516 size 4131
===< pass_clang :: local-to-global >===
===< pass_peep :: a >===
(-3.0 %, 4129 bytes)
timestamp 5553 size 4129
(-3.0 %, 4128 bytes)
timestamp 5558 size 4128
(-2.9 %, 4127 bytes)
timestamp 5559 size 4127
===< pass_peep :: c >===
===< pass_ints :: a >===
===< pass_ints :: b >===
===< pass_ints :: c >===
===< pass_ints :: d >===
===< pass_ints :: e >===
===< pass_balanced :: parens-only >===
(-2.9 %, 4125 bytes)
timestamp 5745 size 4125
(-2.8 %, 4123 bytes)
timestamp 5746 size 4123
(-2.8 %, 4121 bytes)
timestamp 5746 size 4121
===< pass_clex :: rename-toks >===
(-2.5 %, 4109 bytes)
timestamp 5748 size 4109
(-2.3 %, 4103 bytes)
timestamp 5750 size 4103
(-2.3 %, 4103 bytes)
timestamp 5751 size 4103
===< pass_clex :: delete-string >===
===< pass_clex :: define >===
Termination check: size was 4009; now 4103
===< pass_clang :: rename-fun >===
===< pass_clang :: rename-param >===
===< pass_clang :: rename-var >===
===< pass_clang :: rename-class >===
===< pass_clang :: rename-cxx-method >===
===< pass_clang :: combine-global-var >===
===< pass_clang :: combine-local-var >===
===< pass_clang :: simplify-struct-union-decl >===
===< pass_clang :: move-global-var >===
===< pass_clang :: unify-function-decl >===
===< pass_lines :: 0 >===
(-2.7 %, 4118 bytes)
timestamp 5752 size 4118
===< pass_clex :: rename-toks >===
===< pass_clex :: delete-string >===
===< pass_indent :: final >===
===================== done ====================

pass statistics:
  method pass_clex :: rm-tok-pattern-4 worked 1 times and failed 2288 times
  method pass_blank :: 0 worked 1 times and failed 0 times
  method pass_clex :: rm-toks-6 worked 1 times and failed 316 times
  method pass_lines :: 10 worked 2 times and failed 338 times
  method pass_lines :: 8 worked 2 times and failed 338 times
  method pass_lines :: 3 worked 2 times and failed 336 times
  method pass_lines :: 1 worked 2 times and failed 312 times
  method pass_lines :: 4 worked 2 times and failed 338 times
  method pass_lines :: 2 worked 2 times and failed 322 times
  method pass_lines :: 6 worked 2 times and failed 338 times
  method pass_balanced :: parens-only worked 3 times and failed 34 times
  method pass_peep :: a worked 3 times and failed 227 times
  method pass_clex :: rename-toks worked 3 times and failed 84 times
  method pass_clex :: rm-toks-4 worked 4 times and failed 322 times
  method pass_clex :: rm-toks-7 worked 4 times and failed 288 times
  method pass_lines :: 0 worked 4 times and failed 292 times
  method pass_clex :: rm-toks-1 worked 13 times and failed 366 times
  method pass_clex :: rm-toks-2 worked 14 times and failed 338 times

          ******** /tmp/gpt_reduction/results/f0f2aca/scripts_run_creduce_py_benchmark_suite_tmp_gpt_reduction_benchmark_suites_rust_original_max_jobs_8/rust-112526/creduce/small.rs ********

extern crate core;
                 use core::ptr;
                 fn dump_var(val0: u16) {                   println!("{val0}")}
                 unsafe fn a() -> *const *mut i64 {                   let mut _16;                   let mut _23;                   let mut isize_min;                   let mut _46;                   let _107= 0;                   let mut _47;                   let mut _88;                   let mut _31;                   let mut _33;                   let mut _81;                   let mut _90;                   let mut _177= ptr::null_mut();                   let mut _44: ((u64, u64, u8), u32, f32) = Default::default();                   let _61: ((u64, u64, u8), ) = Default::default();                   let mut tup: (((u64, u64, u8), u32, f32), bool) = Default::default();                   let mut _95: (((u64, u64, u8), u32, f32), bool) = Default::default();                   'bb2: loop {
        let two: u16 = 2;
        _31 = core::ptr::addr_of_mut!(_44.0 .2);
        _23 = 11;
        'b: loop {                         *_31 = 1;                         isize_min = isize::MIN;                         'bb65: loop {
                let tup_ptr = core::ptr::addr_of_mut!(tup);
                _31 = core::ptr::addr_of_mut!((*tup_ptr).0 .0 .2);
                _16 = 18215089233857363959_usize;
                match isize_min {
                    isizeMIN => {
                        _90 = _31.wrapping_offset(isize::MIN);
                        _95.0 = _44;
                        _46 = 42;
                        _81 = core::ptr::addr_of!(_23);
                        _44 = tup.0;
                        _88 = _16;
                        'bb80: loop {                                       _31 = _90.wrapping_offset(isize_min);                                       match *_81 {                                         11 => 'bb88: loop {
                                    let tup_ptr2 = core::ptr::addr_of_mut!(tup);
                                    *tup_ptr2 = _95;
                                    isize_min = _107 as isize;
                                    _47 = two >> *_31;
                                    *tup_ptr = _95;
                                    match _88 {
                                        18215089233857363959 => {
                                            *_31 = _61.0 .2.swap_bytes();
                                            _88 = (*tup_ptr2).0 .2 as usize;
                                            _33 = core::ptr::addr_of_mut!(_177);
                                            match _46 {
                                                42 => {
                                                    *_33 = core::ptr::addr_of_mut!(_46);
                                                    match *_177 {
                                                        42 => {
                                                            dump_var(_47);
                                                            return core::ptr::addr_of!(_177)
                                                        }
                                                        _ => continue 'bb2}                                                           }                                                             c => match *_81 {                                                               11 => continue 'bb88,
                                                    _ => continue 'bb65}            }                                                       }
                                                         0 => continue 'bb80,
                                        _ => continue 'bb65}
                                                 }
                c => continue 'bb65
                            }
                        }
                    }
                    _ => continue 'b}
                             }
                         }
                     }
                 }
                 fn main() {
                     unsafe {
                         a();
                     }
                 }
[2023-11-16 02:34:51] Finished reduction on benchmark rust-112526
