small.c:1:9: warning: parameter 'p2' was not declared, defaulting to type 'int' [-Wpedantic]
fn1(p1, p2) { return p1 - p2; }
        ^
small.c:1:5: warning: parameter 'p1' was not declared, defaulting to type 'int' [-Wpedantic]
fn1(p1, p2) { return p1 - p2; }
    ^
small.c:1:1: warning: type specifier missing, defaults to 'int' [-Wimplicit-int]
fn1(p1, p2) { return p1 - p2; }
^
small.c:12:11: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
    if (c = 250UL) {
        ~~^~~~~~~
small.c:12:11: note: place parentheses around the assignment to silence this warning
    if (c = 250UL) {
          ^
        (        )
small.c:12:11: note: use '==' to turn this assignment into an equality comparison
    if (c = 250UL) {
          ^
          ==
small.c:19:3: warning: implicitly declaring library function 'printf' with type 'int (const char *, ...)' [-Wimplicit-function-declaration]
  printf("checksum = %X\n", e);
  ^
small.c:19:3: note: include the header <stdio.h> or explicitly provide a declaration for 'printf'
small.c:21:2: warning: no newline at end of file [-Wnewline-eof]
}
 ^
small.c:13:24: warning: result of comparison of constant 185958572855691298 with expression of type 'int' is always false [-Wtautological-constant-out-of-range-compare]
      h = a || (c = g) == 0x294A85636008822LL;
               ~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~
small.c:15:24: warning: implicit conversion from 'unsigned long' to 'unsigned int' changes value from 18446744073709551367 to 4294967047 [-Wconstant-conversion]
      if (fn1(d, fn2(1 - 250UL, 0xECL)) - h & 1UL)
                 ~~~ ~~^~~~~~~
8 warnings generated.
