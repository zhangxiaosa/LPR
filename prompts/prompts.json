{
    "prompt_from_system": "You are ChatGPT, a large language model trained by OpenAI. Knowledge cutoff: 2021-09. You are an assistant for program analysis and modifications. Please provide a step-by-step analysis (the analysis should not include any code snippets). Please write the final output into a JSON file, and be sure to use Markdown syntax to wrap the JSON.",
    "operations": {
        "function_inlining": {
            "single_level_question": "Given the following program, identify a function and optimize it out via function inlining. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}.",
            "multi_level_question": {
                "primary_question": "Given the following program, identify all functions that can be inlined. Please write the identified functions into a json: {'target_list': [a list of functions]}. If no function is identified, just give an empty list.",
                "followup_question":  "Given the following program and the specified function, optimize it out via function inlining. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}."
            }
        },
        "loop_unrolling": {
            "single_level_question": "Given the following program, identify a loop structure and optimize it out via loop unrolling. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}.",
            "multi_level_question": {
                "primary_question": "Given the following program, identify all loop structures by line. Please write the identified lines(the first line of this loop) into a json: {'target_list': [a list of strings]}. If no loop is identified, just give an empty list.",
                "followup_question":  "Given the following program and the first line of a loop, optimize it out via loop unrolling. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}."
            }
        },
        "redundant_data_type": {
            "single_level_question": "Given the following program, identify a redundant data type (e.g., typedef) and substitute every instance of the defined data type with its associated original data type. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}.",
            "multi_level_question": {
                "primary_question": "Given the following program, identify all redundant data types (e.g., typedef). Please write the identified data type into a json: {'target_list': [a list of data type]}. If no data type is identified, just give an empty list.",
                "followup_question":  "Given the following program and the specified data type, eliminate it, and substitute every instance of it with its associated original data type. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}."
            }
        },
        "complex_data_type": {
            "single_level_question": "Given the following program, identify a complex data type (e.g., struct, class, array), simplify it into variables with primary data type. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}.",
            "multi_level_question": {
                "primary_question": "Given the following program, identify all variables with complex data type (e.g., struct, class, array). Please write the identified variables into a json: {'target_list': [a list of variables]}. If no variable is identified, just give an empty list.",
                "followup_question":  "Given the following program and the specified variable, simplify it into variables with primary data type. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}."
            }
        },
        "intermediate_variable": {
            "single_level_question": "Given the following program, identify an intermediate variable, optimize it out via constant propagation or copy propagation. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}.",
            "multi_level_question": {
                "primary_question": "Given the following program, identify all variables that can be optimized by constant propagation or copy propagation. Please write the identified variables into a json: {'target_list': [a list of variables]}. If no variable is identified, just give an empty list.",
                "followup_question":  "Given the following program and the specified variable, optimize it out by constant propagation or copy propagation. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}."
            }
        },
        "unused_variable": {
            "single_level_question": "Given the following program, identify an unused variable, optimize it out. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}.",
            "multi_level_question": {
                "primary_question": "Given the following program, identify all unused variables. Please write the identified variables into a json: {'target_list': [a list of variables]}. If no variable is identified, just give an empty list.",
                "followup_question":  "Given the following program and the specified variable, eliminate this unused variable. Please write the final program into a json: {\"program\": \"{PROGRAM_CODE}\"}."
            }
        }
    }
}

